{
	"name": "remote-x11-ssh",
	"displayName": "Remote X11 (SSH)",
	"description": "Enables X11 forwarding with the Remote - SSH extension.",
	"repository": {
		"type": "git",
		"url": "https://github.com/ChaosinaCan/vscode-remote-x11",
		"directory": "ssh"
	},
	"author": {
		"name": "Joel Spadin",
		"email": "joelspadin@gmail.com",
		"url": "https://github.com/ChaosinaCan"
	},
	"publisher": "spadin",
	"license": "MIT",
	"version": "1.4.0",
	"engines": {
		"vscode": "^1.47.0"
	},
	"extensionKind": [
		"ui"
	],
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:remote-x11-ssh.connect"
	],
	"contributes": {
		"commands": [
			{
				"command": "remote-x11-ssh.connect",
				"title": "Connect X Forwarding"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "remote-x11-ssh.connect",
					"when": "false"
				}
			]
		},
		"configuration": [
			{
				"title": "Remote X11",
				"properties": {
					"remoteX11.SSH.XAuthPermissionLevel": {
						"type": "string",
						"description": "Sets the permission level of this connection",
						"default": "untrusted",
						"enum": [
							"untrusted",
							"trusted"
						],
						"markdownEnumDescriptions": [
							"Untrusted is the normal permission level",
							"Trusted bypasses X11 security extention, allowing remote windows full access to other applications on the X11 server."
						]
					},
					"remoteX11.SSH.authenticationMethod": {
						"type": "string",
						"description": "Sets how Remote X11 authenticates for SSH connections.",
						"default": "keyFile",
						"enum": [
							"keyFile",
							"agent"
						],
						"markdownEnumDescriptions": [
							"Public key authentication using the configured `#remoteX11.SSH.privateKey#` as the key file. Passphrase-protected keys are not supported.",
							"Authenticate using a key saved to an SSH Agent. Use the `#remoteX11.SSH.agent#` setting if you are not using your platform's default agent."
						]
					},
					"remoteX11.SSH.agent": {
						"type": "string",
						"markdownDescription": "Name of a Unix socket or Windows named pipe for ssh-agent. Set to `pageant` to use Pageant on Windows. If left empty, defaults to Windows 10's OpenSSH agent or the `SSH_AUTH_SOCK` environment variable on other platforms.",
						"default": ""
					},
					"remoteX11.SSH.privateKey": {
						"type": "string",
						"description": "The absolute file path to the SSH private key file.",
						"default": "~/.ssh/id_rsa"
					},
					"remoteX11.SSH.displayCommand": {
						"type": "string",
						"markdownDescription": "A command which prints `DISPLAY=<DISPLAY>` followed by a newline, where `<DISPLAY>` is the value of the `DISPLAY` environment variable.",
						"default": "bash -c \"echo DISPLAY=$DISPLAY\"",
						"scope": "machine"
					},
					"remoteX11.SSH.host": {
						"type": "string",
						"markdownDescription": "Sets the hostname or IP address to connect to instead of reading from `SSH_CONNECTION`.",
						"default": "",
						"scope": "machine"
					},
					"remoteX11.SSH.port": {
						"type": [
							"number",
							"null"
						],
						"markdownDescription": "Sets the port to connect to instead of reading from `SSH_CONNECTION`.",
						"default": null,
						"scope": "machine"
					},
					"remoteX11.SSH.timeout": {
						"type": "number",
						"markdownDescription": "Number of seconds to wait for the SSH shell to print the `DISPLAY` variable. Use 0 to wait forever.",
						"default": 5
					},
					"remoteX11.SSH.verboseLogging": {
						"type": "boolean",
						"description": "Enable verbose logging for SSH connections.",
						"default": false
					}
				}
			}
		]
	},
	"main": "./dist/extension.js",
	"scripts": {
		"vscode:prepublish": "webpack --mode production",
		"compile": "webpack --mode development",
		"watch": "webpack --mode development --watch --info-verbosity verbose",
		"lint": "eslint src/**/*.ts",
		"test-compile": "tsc -p ./",
		"pretest": "npm run test-compile",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/command-exists": "^1.2.0",
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.2.0",
		"@types/node": "^12.19.15",
		"@types/sinon": "^9.0.10",
		"@types/ssh2": "^0.5.46",
		"@types/vscode": "^1.52.0",
		"@typescript-eslint/eslint-plugin": "^4.14.0",
		"@typescript-eslint/parser": "^4.14.0",
		"eslint": "^7.18.0",
		"eslint-config-prettier": "^7.2.0",
		"eslint-import-resolver-typescript": "^2.3.0",
		"eslint-plugin-import": "^2.22.1",
		"eslint-plugin-prettier": "^3.3.1",
		"glob": "^7.1.5",
		"mocha": "^8.2.1",
		"prettier": "^2.2.1",
		"sinon": "^9.2.4",
		"ts-loader": "^8.0.14",
		"typescript": "^4.1.3",
		"vsce": "^1.84.0",
		"vscode-test": "^1.4.1",
		"webpack": "^4.46.0",
		"webpack-cli": "^3.3.12"
	},
	"dependencies": {
		"command-exists": "^1.2.9",
		"ssh2": "^0.8.9"
	},
	"prettier": {
		"singleQuote": true,
		"trailingComma": "all",
		"useTabs": true,
		"printWidth": 120,
		"endOfLine": "auto"
	}
}
