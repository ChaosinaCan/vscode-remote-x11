{
	"name": "remote-x11",
	"displayName": "Remote X11",
	"description": "Sets the DISPLAY variable when in a remote workspace so that GUI applications can be run from VS Code.",
	"repository": {
		"type": "git",
		"url": "https://github.com/ChaosinaCan/vscode-remote-x11",
		"directory": "extension"
	},
	"author": {
		"name": "Joel Spadin",
		"email": "joelspadin@gmail.com",
		"url": "https://github.com/ChaosinaCan"
	},
	"publisher": "spadin",
	"license": "MIT",
	"version": "1.4.1",
	"engines": {
		"vscode": "^1.47.0"
	},
	"extensionKind": [
		"workspace"
	],
	"extensionPack": [
		"spadin.remote-x11-ssh"
	],
	"categories": [
		"Other"
	],
	"keywords": [
		"x11"
	],
	"activationEvents": [
		"*"
	],
	"contributes": {
		"configuration": [
			{
				"title": "Remote X11",
				"properties": {
					"remoteX11.display": {
						"type": "number",
						"description": "Display number to connect to.",
						"default": 0
					},
					"remoteX11.screen": {
						"type": "number",
						"description": "Screen number to connect to.",
						"default": 0
					},
					"remoteX11.X11ConnectionType": {
						"type": "string",
						"description": "Sets how Remote X11 connects to the local X11 server.",
						"default": "tcp",
						"enum": [
							"tcp",
							"unix"
						],
						"markdownEnumDescriptions": [
							"TCP connects to an X11 server listening on a local TCP socket.",
							"Unix connects to an X11 server listening on a unix socket specified in `#remoteX11.X11Socket#`. This is generally nessasary for linux hosts."
						]
					},
					"remoteX11.X11Socket": {
						"type": "string",
						"markdownDescription": "Path to the X11 server unix socket. The screen number specified in `#remoteX11.screen#` is appended to the end. Used when `#remoteX11.X11ConnectionType#` is set to unix. ",
						"default": "/tmp/.X11-unix/X"
					},
					"remoteX11.SSH.enable": {
						"type": "boolean",
						"markdownDescription": "Enable X11 forwarding and set `DISPLAY` for SSH targets?",
						"default": true
					},
					"remoteX11.WSL.enable": {
						"type": "boolean",
						"markdownDescription": "Set `DISPLAY` for WSL targets?",
						"default": true
					},
					"remoteX11.container.enable": {
						"type": "boolean",
						"markdownDescription": "Set `DISPLAY` for containers?",
						"default": true
					},
					"remoteX11.extraVariables": {
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "\\w+\\s*="
						},
						"markdownDescription": "Extra environment variables of the form `NAME=VALUE` to set for remote connections.",
						"default": [
							"LIBGL_ALWAYS_INDIRECT=1"
						]
					}
				}
			}
		]
	},
	"main": "./dist/extension.js",
	"scripts": {
		"vscode:prepublish": "webpack --mode production",
		"compile": "webpack --mode development",
		"watch": "webpack --mode development --watch --info-verbosity verbose",
		"lint": "eslint src/**/*.ts",
		"test-compile": "tsc -p ./",
		"pretest": "npm run test-compile",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.2.0",
		"@types/node": "^12.19.15",
		"@types/sinon": "^9.0.10",
		"@types/vscode": "^1.52.0",
		"@typescript-eslint/eslint-plugin": "^4.14.0",
		"@typescript-eslint/parser": "^4.14.0",
		"eslint": "^7.18.0",
		"eslint-config-prettier": "^7.2.0",
		"eslint-import-resolver-typescript": "^2.3.0",
		"eslint-plugin-import": "^2.22.1",
		"eslint-plugin-prettier": "^3.3.1",
		"glob": "^7.1.5",
		"mocha": "^8.2.1",
		"prettier": "^2.2.1",
		"sinon": "^9.2.4",
		"ts-loader": "^8.0.14",
		"typescript": "^4.1.3",
		"vsce": "^1.84.0",
		"vscode-test": "^1.4.1",
		"webpack": "^4.46.0",
		"webpack-cli": "^3.3.12"
	},
	"dependencies": {
		"find-process": "^1.4.4"
	},
	"prettier": {
		"singleQuote": true,
		"trailingComma": "all",
		"useTabs": true,
		"printWidth": 120,
		"endOfLine": "auto"
	}
}
